/ *
作业1
小明和他家人在泰国旅游，到3个不同的饭店吃饭。账单（票据）分别是124元，48元和268元。为了给服务员小费（tip），小明创建了一个简单的小费计算器函数（ tipCalculator）。
如果账单小于50元，他会给账单的20％作为小费﹔
如果账单在50到200元之间，他会给账单的15％作为小费﹔
如果账单超过200元，他会给账单的10％作为小费。
小明想要2个数组：
1）一个包含所有三个小费（每个账单一个）;
2）一个包含所有三个最终支付的金额（账单＋小费）。
最后把这2个一块输出到控制台。
* /
//方法一：声明函数
函数 tipCalculator （bill ） {
    出租 百分比;
    如果（帐单 <  50 ） {
        百分比 =  0.2 ;
    }否则， 如果（帐单> = 50  && 帐单 <  200 ） {
        百分比 =  0.15 ;
    }其他 {
        百分比 =  0.1 ;
    }
    回报 率*账单;
}
控制台。log （'小费是$' + tipCalculator （10 ））; //测试函数

常量 票据 =  [ 124 ，48 ，268 ] ; //账单篇
//将账单单价的价值纳入函数衍生小费
const  tips  =  [ tipCalculator （bills [ 0 ] ），tipCalculator （bills [ 1 ] ），tipCalculator （bills [ 2 ] ）] ；
const  cost  =  [帐单[ 0 ]  + 提示[ 0 ] ，帐单[ 1 ]  + 提示[ 1 ] ，帐单[ 2 ]  + 提示[ 2 ] ] ; //账单和消费相加最终最终支付的金额
控制台。日志（'提示是' + 提示，'成本是'  + 成本）; //两个文本输出到控制台

//方法二：箭头函数
const  tipCalculator  =  bills  =>  {
    const  tips  =  [ ] ；
    常量 成本 =  [ ] ;
    账单。forEach （帐单 =>  {
        让 小费;
        如果（帐单 <  50 ） {
            小费 = 账单* 0.2 ;
        }否则， 如果（帐单> = 50  && 帐单 <  200 ） {
            小费 = 账单* 0.15 ;
        }其他 {
            小费 = 账单* 0.1 ;
        }
        常量 成本 = 账单 +小费;
        提示。推（尖）;
        费用。推（成本）;
    } ）
    控制台。日志（'小费是' + 小费）;
    控制台。日志（'成本是'  + 成本）;
}
tipCalculator （[ 124 ，48 ，268 ] ）;

/ *
作业2
假设有三个数a，b，c，求这三个数的除外的函数为：
函数均值（a，b，c）{
    返回（a + b + c）/ 3;
}
1）如果要求任意个数的数字的上限，该如何改进这个函数呢？
请编写改进的mean1（）函数，让该函数可以计算任意个数的数字的前缀。
提示：使用扩展运算符
2）请编写函数mean2（），使用多重的reduce（）函数改写mean1（），让代码更精简。
3）请在第二步的基础上编写函数mean3（），实现只对数组中的偶数求变量。
提示：使用某些函数和map（）
* /
// ...参数计算任意个数的数字的位数
const  mean1  =  function （ ... arguments ） {
    令 sum  =  0 ;
    为 （VAR 我= 0 ;我<参数。长度;我++ ）{
        sum  + = 参数[ i ] ；
    }
    返回 和/参数。长度;
}
平均 =  mean1 （5 ，9 ，5 ，21 ）;
控制台。log （“平均为”  +  avg ）;

const  mean2  =  （ ...数组） =>  array 。减少（（acc ，val ） =>  acc  +  val ，0 ） /数组。长度; //更新求和除长度
控制台。日志（“平均是”  +  mean2 （ ... [ 5 ，9 ，10 ，28 ] ））;

常量 oArray1  =  [ 8 ，10 ，21 ，8 ，10 ] ;
const  oArray2  =  oArray1 。过滤（（x ） =>  x％2 === 0 ）; //取余偶数
控制台。日志（oArray2 ）;
const  mean3  =  oArray2 。减少（
    （acc ，x ） =>  acc  +  x ） / oArray2 。长度///
控制台。log （“平均值是”  +  mean3 ）;
